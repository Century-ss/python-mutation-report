name: Unit test

on:
  workflow_call:
    inputs:
      hosted-runner-name:
        required: true
        type: string

jobs:
  unit-test:
    runs-on: ${{ inputs.hosted-runner-name }}
    strategy:
      fail-fast: false # If one job fails, the others work.
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pipenv"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv

      - name: Create cache
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}

      - name: Install dependencies
        run: pipenv sync --dev

      - name: Perform unit test
        run: pipenv run pytest --cache-clear tests
